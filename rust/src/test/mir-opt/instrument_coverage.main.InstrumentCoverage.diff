- // MIR for `main` before InstrumentCoverage
+ // MIR for `main` after InstrumentCoverage
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at /the/src/instrument_coverage.rs:10:11: 10:11
      let mut _1: ();                      // in scope 0 at /the/src/instrument_coverage.rs:10:1: 16:2
      let mut _2: bool;                    // in scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17
      let mut _3: !;                       // in scope 0 at /the/src/instrument_coverage.rs:12:18: 14:10
  
      bb0: {
+         Coverage::Counter(0) for /the/src/instrument_coverage.rs:10:11 - 16:2; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6
          falseUnwind -> [real: bb1, cleanup: bb2]; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6
      }
  
      bb1: {
          StorageLive(_2);                 // scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17
          _2 = bar() -> [return: bb3, unwind: bb2]; // scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17
                                           // mir::Constant
                                           // + span: /the/src/instrument_coverage.rs:12:12: 12:15
                                           // + literal: Const { ty: fn() -> bool {bar}, val: Value(Scalar(<ZST>)) }
      }
  
      bb2 (cleanup): {
          resume;                          // scope 0 at /the/src/instrument_coverage.rs:10:1: 16:2
      }
  
      bb3: {
          FakeRead(ForMatchedPlace, _2);   // scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17
          switchInt(_2) -> [false: bb5, otherwise: bb4]; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10
      }
  
      bb4: {
          falseEdge -> [real: bb6, imaginary: bb5]; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10
      }
  
      bb5: {
          _1 = const ();                   // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10
          StorageDead(_2);                 // scope 0 at /the/src/instrument_coverage.rs:15:5: 15:6
          goto -> bb0;                     // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6
      }
  
      bb6: {
          _0 = const ();                   // scope 0 at /the/src/instrument_coverage.rs:13:13: 13:18
          StorageDead(_2);                 // scope 0 at /the/src/instrument_coverage.rs:15:5: 15:6
          return;                          // scope 0 at /the/src/instrument_coverage.rs:16:2: 16:2
      }
  }
  

error[E0038]: the trait `Tr` cannot be made into an object
  --> $DIR/trait-object-safety.rs:15:22
   |
LL | trait Tr {
   |       -- this trait cannot be made into an object...
LL |     fn foo();
   |        --- ...because associated function `foo` has no `self` parameter
...
LL |     let _: &dyn Tr = &St;
   |                      ^^^ the trait `Tr` cannot be made into an object
   |
   = note: required because of the requirements on the impl of `CoerceUnsized<&dyn Tr>` for `&St`
   = note: required by cast to type `&dyn Tr`
help: consider turning `foo` into a method by giving it a `&self` argument or constraining it so it does not apply to trait objects
   |
LL |     fn foo() where Self: Sized;
   |              ^^^^^^^^^^^^^^^^^

error[E0038]: the trait `Tr` cannot be made into an object
  --> $DIR/trait-object-safety.rs:15:12
   |
LL | trait Tr {
   |       -- this trait cannot be made into an object...
LL |     fn foo();
   |        --- ...because associated function `foo` has no `self` parameter
...
LL |     let _: &dyn Tr = &St;
   |            ^^^^^^^ the trait `Tr` cannot be made into an object
   |
help: consider turning `foo` into a method by giving it a `&self` argument or constraining it so it does not apply to trait objects
   |
LL |     fn foo() where Self: Sized;
   |              ^^^^^^^^^^^^^^^^^

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0038`.

error[E0038]: the trait `Foo` cannot be made into an object
  --> $DIR/arbitrary-self-types-not-object-safe.rs:33:13
   |
LL | trait Foo {
   |       --- this trait cannot be made into an object...
LL |     fn foo(self: &Rc<Self>) -> usize;
   |                  ---------
   |                  |
   |                  ...because method `foo`'s `self` parameter cannot be dispatched on
   |                  help: consider changing method `foo`'s `self` parameter to be `&self`: `&Self`
...
LL |     let x = Rc::new(5usize) as Rc<dyn Foo>;
   |             ^^^^^^^^^^^^^^^ the trait `Foo` cannot be made into an object
   |
   = note: required because of the requirements on the impl of `CoerceUnsized<Rc<dyn Foo>>` for `Rc<usize>`
   = note: required by cast to type `Rc<dyn Foo>`

error: aborting due to previous error

For more information about this error, try `rustc --explain E0038`.

error[E0038]: the trait `Bar` cannot be made into an object
  --> $DIR/object-safety-generics.rs:18:30
   |
LL | trait Bar {
   |       --- this trait cannot be made into an object...
LL |     fn bar<T>(&self, t: T);
   |        --- ...because method `bar` has generic type parameters
...
LL | fn make_bar<T:Bar>(t: &T) -> &dyn Bar {
   |                              ^^^^^^^^ the trait `Bar` cannot be made into an object
   |
   = help: consider moving `bar` to another trait

error[E0038]: the trait `Bar` cannot be made into an object
  --> $DIR/object-safety-generics.rs:24:39
   |
LL | trait Bar {
   |       --- this trait cannot be made into an object...
LL |     fn bar<T>(&self, t: T);
   |        --- ...because method `bar` has generic type parameters
...
LL | fn make_bar_explicit<T:Bar>(t: &T) -> &dyn Bar {
   |                                       ^^^^^^^^ the trait `Bar` cannot be made into an object
   |
   = help: consider moving `bar` to another trait

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0038`.

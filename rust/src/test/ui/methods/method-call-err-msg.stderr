error[E0061]: this function takes 0 arguments but 1 argument was supplied
  --> $DIR/method-call-err-msg.rs:13:7
   |
LL |     fn zero(self) -> Foo { self }
   |     -------------------- defined here
...
LL |     x.zero(0)
   |       ^^^^ - supplied 1 argument
   |       |
   |       expected 0 arguments

error[E0061]: this function takes 1 argument but 0 arguments were supplied
  --> $DIR/method-call-err-msg.rs:14:7
   |
LL |     fn one(self, _: isize) -> Foo { self }
   |     ----------------------------- defined here
...
LL |      .one()
   |       ^^^- supplied 0 arguments
   |       |
   |       expected 1 argument

error[E0061]: this function takes 2 arguments but 1 argument was supplied
  --> $DIR/method-call-err-msg.rs:15:7
   |
LL |     fn two(self, _: isize, _: isize) -> Foo { self }
   |     --------------------------------------- defined here
...
LL |      .two(0);
   |       ^^^ - supplied 1 argument
   |       |
   |       expected 2 arguments

error[E0599]: no method named `take` found for struct `Foo` in the current scope
  --> $DIR/method-call-err-msg.rs:19:7
   |
LL | pub struct Foo;
   | ---------------
   | |
   | method `take` not found for this
   | doesn't satisfy `Foo: Iterator`
...
LL |      .take()
   |       ^^^^ method not found in `Foo`
   |
   = note: the method `take` exists but the following trait bounds were not satisfied:
           `Foo: Iterator`
           which is required by `&mut Foo: Iterator`
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following trait defines an item `take`, perhaps you need to implement it:
           candidate #1: `Iterator`

error[E0061]: this function takes 3 arguments but 0 arguments were supplied
  --> $DIR/method-call-err-msg.rs:21:7
   |
LL |     fn three<T>(self, _: T, _: T, _: T) -> Foo { self }
   |     ------------------------------------------ defined here
...
LL |     y.three::<usize>();
   |       ^^^^^--------- supplied 0 arguments
   |       |
   |       expected 3 arguments

error: aborting due to 5 previous errors

Some errors have detailed explanations: E0061, E0599.
For more information about an error, try `rustc --explain E0061`.

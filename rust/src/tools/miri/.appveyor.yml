build: off # No Visual Studio auto-build.
environment:
  global:
    PROJECT_NAME: miri
  matrix:
    - TARGET: i686-pc-windows-msvc
matrix:
  fast_finish: true # Immediately finish build once one of the jobs fails.
cache:
- '%USERPROFILE%\.cargo'
- '%USERPROFILE%\.rustup'

# branches to build
branches:
  # whitelist
  only:
  - auto
  - try

install:
# Compute the Rust version we use.
- set /p RUSTC_HASH=<rust-version
# Install Rust. We use the "stable" toolchain for better caching, it is just used to build `rustup-toolchain-install-master`.
# But we also need to take into account that the build cache might have a different, outdated default.
- curl -sSf --retry 3 -o rustup-init.exe https://win.rustup.rs/
- rustup-init.exe -y --default-host %TARGET% --default-toolchain none --profile minimal
- set PATH=%USERPROFILE%\.cargo\bin;%PATH%
- rustup default stable
- rustup toolchain uninstall beta nightly
- rustup update
# Install "master" toolchain.
- cargo install rustup-toolchain-install-master
- rustup-toolchain-install-master -f -n master %RUSTC_HASH% -c rust-src -c rustc-dev -c llvm-tools
- rustup default master
- rustc --version
- cargo --version

test_script:
- set PYTHON=C:\msys64\mingw64\bin\python3.exe
- bash ci.sh

after_test:
# Don't cache "master" toolchain, it's a waste.
- rustup default stable
- rustup toolchain uninstall master

notifications:
- provider: Email
  on_build_success: false
